{"version":3,"file":"a-button.js","sourceRoot":"","sources":["../../../src/components/a-button/a-button.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAEvE,MAAM,OAAO,OAAQ,SAAQ,UAAU;IAIrC;QACE,KAAK,EAAE,CAAC;QAJkB,eAAU,GAAG,sBAAsB,CAAC;QACpC,UAAK,GAAG,oBAAoB,CAAC;QAIvD,mBAAmB,EAAE,CAAC;IACxB,CAAC;IA2BQ,OAAO;QACd,MAAM,kBAAkB,GACtB,WAAW,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;QACpD,MAAM,aAAa,GAAG,WAAW,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;QAE9D,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;IACxD,CAAC;IAEQ,YAAY;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAC9D,IAAI,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC;gBAClC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YACxC,CAAC;iBAAM,IAAI,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC;gBACzC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YACxC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;uBACQ,IAAI,CAAC,QAAQ;;;;;KAK/B,CAAC;IACJ,CAAC;IAEO,QAAQ,KAAI,CAAC;;AA1DL,cAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;GAuB3B,AAvBqB,CAuBpB;AA/B0B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CAAqC;AACpC;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sCAA8B;AAoE3D,cAAc,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { applyThemeVariables, themeColors } from \"../../styles/themes\";\n\nexport class AButton extends LitElement {\n  @property({ type: String }) background = \"var(--theme-primary)\";\n  @property({ type: String }) color = \"var(--theme-light)\";\n\n  constructor() {\n    super();\n    applyThemeVariables();\n  }\n\n  static override styles = css`\n    :host {\n      display: inline-block;\n    }\n\n    button {\n      border: none;\n      padding: 10px 16px;\n      font-size: 16px;\n      cursor: pointer;\n      border-radius: 8px;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      background-color: var(--main-background);\n      color: var(--main-color);\n    }\n\n    ::slotted([aPrefix]),\n    ::slotted([aSuffix]) {\n      display: flex;\n      align-items: center;\n    }\n  `;\n\n  override updated() {\n    const resolvedBackground =\n      themeColors()[this.background] || this.background;\n    const resolvedColor = themeColors()[this.color] || this.color;\n\n    this.style.setProperty(\"--main-background\", resolvedBackground);\n    this.style.setProperty(\"--main-color\", resolvedColor);\n  }\n\n  override firstUpdated() {\n    this.updateSlots();\n  }\n\n  updateSlots() {\n    this.querySelectorAll(\"[aPrefix], [aSuffix]\").forEach((child) => {\n      if (child.hasAttribute(\"aPrefix\")) {\n        child.setAttribute(\"slot\", \"aPrefix\");\n      } else if (child.hasAttribute(\"aSuffix\")) {\n        child.setAttribute(\"slot\", \"aSuffix\");\n      }\n    });\n  }\n\n  override render() {\n    return html`\n      <button @click=${this._onClick}>\n        <slot name=\"aPrefix\"></slot>\n        <slot></slot>\n        <slot name=\"aSuffix\"></slot>\n      </button>\n    `;\n  }\n\n  private _onClick() {}\n}\n\ncustomElements.define(\"a-button\", AButton);\n"]}